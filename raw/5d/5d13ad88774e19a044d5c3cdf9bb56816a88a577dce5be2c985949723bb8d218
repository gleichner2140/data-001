<?php
 $prefix = '';
$page_layout = array(

	'id' => 'my-page-layout',

	'title' => '页面布局选项',

	'page' => 'page_show_layout',

	'context' => 'side',

	'priority' => 'core',

	'fields' => array(
		
		array(
			'name' => '选择页面布局风格',
			'desc' => '页面风格有无边栏、右侧边栏、左侧边栏，请选择',
			'id' => $prefix . 'kaya_pagesidebar',
			'type' => 'select1',
			'options' => array( "full" => "无侧边栏","rightsidebar" => "侧边栏在右",  "leftsidebar" => "侧边栏在左")
		),
		array(
			'name' => '选择侧边栏小工具区',
			'desc' => '在此页你想显示哪一个侧边栏小工具区：<br>Pages Sidebar（普通页面侧边栏）<br>Portfolio Sidebar（作品集页面侧边栏）<br>Blog Sidebar（博客页面侧边栏）<br>Contact Sidebar（联系页面侧边栏）<br> 注意：可通过"主题选项 >自定义侧边栏"创建自定的侧边栏',
			'id' => $prefix . 'kaya_widgetsidebar',
			'type' => 'select',
			'options' => $sidebar_widgets
		),
		
	)

);



add_action('admin_menu', 'page_add_layout');



// Add meta box

function page_add_layout() {

	global $page_layout;

	
		add_meta_box( $page['id'], 'Page Layout Options', 'page_show_layout', 'page', 'side', 'high' );  
	//add_meta_box($page_layout['id'], $page_layout['title'], 'page_show_layout', $page_layout['page'], $page_layout['context'], $page_layout['priority']);

}



// Callback function to show fields in meta box

function page_show_layout() {

	global $page_layout,$post,$page;
	echo '<input type="hidden" name="mytheme1_meta_box_nonce" value="', wp_create_nonce(basename(__FILE__)), '" />';
foreach ($page_layout['fields'] as $field) { 
 $meta = get_post_meta($post->ID, $field['id'], true);
	
		if($meta=="") $meta=$field['std'];
	echo '<p><strong>',$field['name'],'</strong></p>';
	
switch ($field['type']) {

			case 'select':

				echo '<select name="', $field['id'], '" id="', $field['id'], '">';

				foreach ($field['options'] as $key => $val) {

					echo '<option value="', $val, '" ', $meta == $val ? ' selected="selected"' : '', '>', $val, '</option>';

				}

				echo '</select>';
				echo '<p><label>',$field['desc'],'</label></p>';
				break;
				case 'select1':

				echo '<select name="', $field['id'], '" id="', $field['id'], '">';

				foreach ($field['options'] as $key => $val) {

					echo '<option value="', $key, '" ', $meta == $key ? ' selected="selected"' : '', '>', $val, '</option>';

				}

				echo '</select>';
				echo '<p><label>',$field['desc'],'</label></p>';
				break;
				
	}


	


}	

}

add_action('save_post', 'page_save_layout_data');
add_action('admin_init','custompagemetalayout_jsscript');

function custompagemetalayout_jsscript(){
wp_enqueue_script('custommeta_script', get_template_directory_uri() .'/lib/admin/js/custommeta_jsscript.js',array('jquery'));
wp_enqueue_script('color-picker', KAYA_DIRECTORY.'/lib/admin/js/colorpicker.js', array('jquery'));
}

// Save data from meta box

function page_save_layout_data($post_id) {

	global $page_layout,$page;

	// verify nonce

	if (!wp_verify_nonce(isset($_POST['mytheme1_meta_box_nonce']), basename(__FILE__))) {

		return $post_id;

	}



	// check autosave

	if (defined('DOING_AUTOSAVE') && DOING_AUTOSAVE) {

		return $post_id;

	}



	// check permissions

	if ('page' == $_POST['post_type']) {

		if (!current_user_can('edit_page', $post_id)) {

			return $post_id;

		}

	} elseif (!current_user_can('edit_post', $post_id)) {

		return $post_id;

	}

	

	foreach ($page_layout['fields'] as $field) {

		$old = get_post_meta($post_id, $field['id'], true);

		$new = $_POST[$field['id']];

		

		if ($new && $new != $old) {

			update_post_meta($post_id, $field['id'], $new);

		} elseif ('' == $new && $old) {

			delete_post_meta($post_id, $field['id'], $old);

		}

	}

}



?>